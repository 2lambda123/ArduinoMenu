Arduino Menu Library

+ color enumeration at base level
+ add list of output devices
+ add macros to build navRoot
+ suspension in only one function with suspension events
+ implement other fields
+ use menu acceletators + auto numbering
+ output numbering + acceletation should be optional for any menu class and not just specialized
- split options into:
  * config (static MEMMODE)
  * options (dynamic => RAM)
+ use/draw title option for any menu, and ignore it on single line devices!
- dialogs and modal dialogs (static alloc)
- alerts (dynamic)
- errors (dynamic modal)
- modal just blocks the cycle.
- custom field format (date/time)
- textField?
    if so make it a submenu where text is a title and we navigate a pad/menu to choose letters and commands.

IDEA: generic input:

- input parsing should be delivered to focused menu object to allow customization
- then some chain or system wide functions can be called as aux. functions.
- input classes should provide a parser to be called as aux function of any of the above and deliver cmds.
  => that we gcan not accept Serial as input but use a specialized derivation instead
